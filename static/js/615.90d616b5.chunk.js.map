{"version":3,"file":"static/js/615.90d616b5.chunk.js","mappings":"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","sources":["Components/ScreenLoader.js","Components/BodyPart.js","Components/HorizontalCardScrollbar.js","Components/SearchExercises.js","constants/color_constatnts.js","constants/url_constants.js","utils/fetchData.js"],"sourcesContent":["import React from 'react';\r\nimport { Typography, Box } from '@mui/material';\r\nimport '../../src/App.css'\r\n\r\n\r\nconst ScreenLoader = ({ message = \"Loading...\" }) => {\r\n    return (\r\n\r\n        <Box className=\"loading-container\" >\r\n            <div className=\"spinner\"></div>\r\n            <Typography fontWeight={700} sx={{ fontSize: { lg: '20x', xs: '15px' } }} m='10px' textAlign='center'>{message}</Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ScreenLoader;\r\n","import React from 'react';\r\nimport { Stack, Typography } from '@mui/material';\r\n// import GymIcon from '../assets/icons/gym.png';\r\nimport { primaryColor } from '../constants';\r\nconst BodyPart = ({ item, setBodyPart, bodyPart }) => {\r\n    // console.log(\"item from body part component----->\", item);\r\n\r\n    return (\r\n        <>\r\n            <Stack\r\n                className='bodyPart-card' type='button' alignItems='center' justifyContent='center'\r\n                sx={{\r\n                    // border: item.item == 'all' ? `2px solid ${primaryColor}` : `1px solid ${primaryColor}`,\r\n                    border: `${item === 'all' ? '2px' : '1px'} solid ${primaryColor}`,\r\n                    borderTop: bodyPart === item ? `4px solid ${primaryColor}` : '',\r\n                    borderBottom: bodyPart === item ? `4px solid ${primaryColor}` : '',\r\n                    background: '#FFF',\r\n                    borderBottomLeftRadius: '30px',\r\n                    borderTopRightRadius: '30px',\r\n                    width: '150px',\r\n                    height: '100px',\r\n                    cursor: 'pointer',\r\n                    gap: '47px',\r\n                }}\r\n                onClick={() => {\r\n                    // console.log(typeof setBodyPart);\r\n                    setBodyPart(item);\r\n                    window.scrollBy({ top: 1800, left: 100, behavior: 'smooth' });\r\n                }}\r\n            >\r\n                {/* <image src={GymIcon} color='red' alt='dumbbell' style={{ with: '20px', height: '20px' }} /> */}\r\n                <Typography textAlign='center' fontSize='27px' fontWeight='bold' color='#3a1212' textTransform='capitalize'>{item} </Typography>\r\n            </Stack >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BodyPart","import React from 'react';\r\nimport { Box } from '@mui/material'\r\nimport BodyPart from './BodyPart'\r\nimport { ScrollMenu } from 'react-horizontal-scrolling-menu';\r\n\r\nconst HorizontalCardScrollbar = ({ data, setBodyPart, bodyPart }) => {\r\n\r\n    return (\r\n        <ScrollMenu>\r\n\r\n            {data.map((item) => {\r\n                return <Box\r\n                    key={item.id || item}\r\n                    itemID={item.id || item}\r\n                    title={item.id || item}\r\n                    m='20px 40px'>\r\n                    <BodyPart\r\n                        item={item}\r\n                        setBodyPart={setBodyPart}\r\n                        bodyPart={bodyPart}\r\n                    />\r\n\r\n                </Box>\r\n            })}\r\n\r\n\r\n        </ScrollMenu>\r\n    )\r\n}\r\n\r\nexport default HorizontalCardScrollbar","import React, { useState } from 'react';\r\nimport { Box, Button, Stack, TextField, Typography } from '@mui/material';\r\nimport { primaryColor, exercisedbURL } from '../constants';\r\nimport HorizontalCardScrollbar from './HorizontalCardScrollbar';\r\nimport ScreenLoader from './ScreenLoader';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { fetchData, exerciseOptions } from '../utils/fetchData';\r\n\r\nconst SearchExercises = ({ setExercises, bodyPart, setBodyPart }) => {\r\n    const [search, setSearch] = useState('');\r\n\r\n    // Fetching body parts\r\n    const { data: bodyParts, isLoading, error } = useQuery({\r\n        queryKey: ['bodyParts'],\r\n        queryFn: () => fetchData(`${exercisedbURL}/exercises/bodyPartList`, exerciseOptions, 100),\r\n    });\r\n\r\n    // Handle the search operation\r\n    const handleSearch = async () => {\r\n        if (search) {\r\n            const exercisesData = await fetchData(`${exercisedbURL}/exercises`, exerciseOptions, 100);\r\n            try {\r\n                const searchResultExercises = exercisesData.filter((exercise) =>\r\n                    exercise.name.toLowerCase().includes(search.toLowerCase()) ||\r\n                    exercise.target.toLowerCase().includes(search) ||\r\n                    exercise.equipment.toLowerCase().includes(search) ||\r\n                    exercise.bodyPart.toLowerCase().includes(search)\r\n                );\r\n                setSearch(''); // clear search field\r\n                setExercises(searchResultExercises); // setting the response data\r\n            } catch (error) {\r\n                console.error(\"Error while searching exercises:\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Stack alignItems=\"center\" sx={{ mt: { lg: '35px', md: '200px', xs: '0px' } }} justifyContent=\"center\" p=\"20px\">\r\n            <Typography\r\n                fontWeight={700}\r\n                sx={{ fontSize: { lg: '35px', xs: '25px' }, textAlign: 'center' }}\r\n                mb=\"50px\"\r\n            >\r\n                Exercises That Will Elevate Your Fitness Journey\r\n            </Typography>\r\n\r\n            <Box position=\"relative\" mb=\"72px\">\r\n                <TextField\r\n                    sx={{\r\n                        input: {\r\n                            fontWeight: '700',\r\n                            border: 'none',\r\n                            borderRadius: '4px',\r\n                        },\r\n                        width: { lg: '800px', md: '700px', xs: '350px' },\r\n                        backgroundColor: '#fff',\r\n                    }}\r\n                    height=\"76px\"\r\n                    value={search}\r\n                    onChange={(e) => setSearch(e.target.value.toLowerCase())}\r\n                    placeholder=\"Search Exercises\"\r\n                    type=\"text\"\r\n                />\r\n                <Button\r\n                    className=\"search-btn\"\r\n                    sx={{\r\n                        bgcolor: primaryColor,\r\n                        color: '#fff',\r\n                        textTransform: 'none',\r\n                        width: { lg: \"175px\", xs: '80px' },\r\n                        fontSize: { lg: \"20px\", xs: '14px' },\r\n                        height: '56px',\r\n                        position: 'absolute',\r\n                        right: '0',\r\n                        top: '0',\r\n                    }}\r\n                    onClick={handleSearch}\r\n                >\r\n                    Search\r\n                </Button>\r\n            </Box>\r\n\r\n            {/* Loading and error handling */}\r\n            {isLoading ? (\r\n                <ScreenLoader message=\"Please wait while loading...\" />\r\n            ) : error ? (\r\n                <Box sx={{ color: 'red', textAlign: 'center' }}>\r\n                    <Typography variant=\"h6\">Error: {error.message}</Typography>\r\n                    <Typography variant=\"body2\">Please try again later.</Typography>\r\n                </Box>\r\n            ) : (\r\n                <Box sx={{ position: 'relative', width: '100%', p: '20px', height: '80px' }}>\r\n                    {bodyParts && (\r\n                        <HorizontalCardScrollbar data={bodyParts} bodyPart={bodyPart} setBodyPart={setBodyPart} />\r\n                    )}\r\n                </Box>\r\n            )}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default SearchExercises;\r\n","// export const primaryColor = '#ff2625';\r\n// export const primaryColor = '#4894ff';\r\nexport const primaryColor = '#7ebddd';\r\nexport const secondaryColor = '#353535';\r\nexport const primaryColorFade = '#7ebddd85';\r\nexport const secondaryColorFade = '#d32f2f';","export const exercisedbURL = 'https://exercisedb.p.rapidapi.com';\r\nexport const exerciseYoutubeVideoURL = 'https://youtube-search-and-download.p.rapidapi.com';\r\n","export const exerciseOptions = {\r\n    method: 'GET',\r\n    headers: {\r\n        'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY_FOR_EXERCISEDB,\r\n        'x-rapidapi-host': 'exercisedb.p.rapidapi.com'\r\n    }\r\n};\r\n\r\nexport const exerciseYotubeOptions = {\r\n    method: 'GET',\r\n    headers: {\r\n        'x-rapidapi-key': process.env.REACT_APP_RAPID_API_KEY_FOR_EXERCISEDB,\r\n        'x-rapidapi-host': 'youtube-search-and-download.p.rapidapi.com'\r\n    }\r\n};\r\n\r\n\r\nexport const fetchData = async (url, options, limit = 50) => {\r\n\r\n    try {\r\n        const response = await fetch(url + `?limit=${limit}&offset=0`, options);\r\n        const data = await response.json();\r\n        // console.error(\"result size:\", data.length);\r\n        return data;\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n\r\n        return [];\r\n    }\r\n};"],"names":["_ref","message","_jsxs","Box","className","children","_jsx","Typography","fontWeight","sx","fontSize","lg","xs","m","textAlign","item","setBodyPart","bodyPart","_Fragment","Stack","type","alignItems","justifyContent","border","primaryColor","borderTop","borderBottom","background","borderBottomLeftRadius","borderTopRightRadius","width","height","cursor","gap","onClick","window","scrollBy","top","left","behavior","color","textTransform","data","ScrollMenu","map","itemID","id","title","BodyPart","setExercises","search","setSearch","useState","bodyParts","isLoading","error","useQuery","queryKey","queryFn","fetchData","exercisedbURL","exerciseOptions","mt","md","p","mb","position","TextField","input","borderRadius","backgroundColor","value","onChange","e","target","toLowerCase","placeholder","Button","bgcolor","right","async","exercisesData","searchResultExercises","filter","exercise","name","includes","equipment","console","ScreenLoader","variant","HorizontalCardScrollbar","primaryColorFade","exerciseYoutubeVideoURL","method","headers","process","exerciseYotubeOptions","url","options","limit","arguments","length","undefined","response","fetch","json","log"],"sourceRoot":""}